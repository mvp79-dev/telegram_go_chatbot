package commands

import (
	"fmt"
	"math/rand"
	"time"

	"github.com/NexonSU/telegram-go-chatbot/utils"
	tele "gopkg.in/telebot.v3"
	"gorm.io/gorm/clause"
)

//Kill user on /blessing, /suicide
func Blessing(context tele.Context) error {
	err := context.Delete()
	if err != nil {
		return err
	}
	ChatMember, err := utils.Bot.ChatMemberOf(context.Chat(), context.Sender())
	if err != nil {
		return err
	}
	if ChatMember.Role == "administrator" || ChatMember.Role == "creator" {
		return context.Send(fmt.Sprintf("<code>üëª %v –≤–æ–∑—Ä–æ–¥–∏–ª—Å—è —É –∫–æ—Å—Ç—Ä–∞.</code>", utils.UserFullName(context.Sender())))
	}
	var duelist utils.Duelist
	result := utils.DB.Model(utils.Duelist{}).Where(context.Sender().ID).First(&duelist)
	if result.RowsAffected == 0 {
		duelist.UserID = context.Sender().ID
		duelist.Kills = 0
		duelist.Deaths = 0
	}
	duelist.Deaths++
	result = utils.DB.Clauses(clause.OnConflict{
		UpdateAll: true,
	}).Create(&duelist)
	if result.Error != nil {
		return result.Error
	}
	duration := utils.RandInt(1, duelist.Deaths+1)
	prependText := ""
	if utils.RandInt(0, 100) >= 98 {
		duration = duration * 10
		prependText = "–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ "
	}
	if duration > 600 {
		duration = 600
	}
	ChatMember.RestrictedUntil = time.Now().Add(time.Second * time.Duration(60*duration)).Unix()
	err = utils.Bot.Restrict(context.Chat(), ChatMember)
	if err != nil {
		return err
	}
	reason := []string{
		"–≤—ã–±—Ä–∞–ª –ª—ë–≥–∫–∏–π –ø—É—Ç—å",
		"—Å—ã–≥—Ä–∞–ª –≤ —è—â–∏–∫",
		"—Å–ª–∏–ª —Å–≤–æ—ë HP –¥–æ –Ω—É–ª—è",
		"–ø—Ä–∏–∫–∞–∑–∞–ª –¥–æ–ª–≥–æ –∂–∏—Ç—å",
		"–ø–æ–∫–∏–Ω—É–ª —ç—Ç–æ—Ç —Å–∫–æ—Ä–±–Ω—ã–π –º–∏—Ä",
		"–ø–∞–≥–∏–±",
		"—Ä–∞–∑–±–µ–∂–∞–≤—à–∏—Å—å –ø—Ä—ã–≥–Ω—É–ª —Å–æ —Å–∫–∞–ª—ã",
		"—Ä–∞–∑–æ–≥–Ω–∞–ª RTX 4090 Ti",
		"–ø—Ä–∏–Ω—è–ª –∏—Å–ª–∞–º",
		"–ø—å—ë—Ç —á–∞–π –∏ –∫—É—à–æ–µ—Ç –∫–æ–Ω—Ñ–µ—Ç—ã, –Ω–∏–∫–∞–∫–æ–≤–∞ —Å—É–µ—Ü—ã–¥–∞",
	}
	return context.Send(fmt.Sprintf("<code>üí• %v %v%v.\n–†–µ—Å–ø–∞–≤–Ω —á–µ—Ä–µ–∑ %v –º–∏–Ω.</code>", utils.UserFullName(context.Sender()), prependText, reason[rand.Intn(len(reason))], duration))
}
